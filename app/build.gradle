plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'io.mayu.birdpilot'
    compileSdk 34

    defaultConfig {
        applicationId 'io.mayu.birdpilot'
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }

    packaging {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}']
        }
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2024.04.01')
    implementation composeBom
    androidTestImplementation composeBom

    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    implementation 'androidx.activity:activity-compose:1.8.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'

    implementation 'androidx.camera:camera-core:1.3.1'
    implementation 'androidx.camera:camera-camera2:1.3.1'
    implementation 'androidx.camera:camera-lifecycle:1.3.1'
    implementation 'androidx.camera:camera-view:1.3.1'

    implementation("androidx.datastore:datastore-preferences:1.1.1")

}

// --- C1 verify task (Groovy DSL) ---
tasks.register("verifyC1") {
    doLast {
        def f = file("src/main/java/io/mayu/birdpilot/MainActivity.kt")
        def s = f.getText("UTF-8")

        def need = { String msg, boolean ok ->
            if (!ok) throw new GradleException("C1 guard failed: ${msg}")
        }

        need("markers missing",
                s.contains("C1_AUTOFIRE_BEGIN") && s.contains("C1_AUTOFIRE_END"))

        need("auto-fire loop missing",
                (s =~ /LaunchedEffect\(Unit\)/).find())

        need("armed path missing",
                s.contains("autoArmed") && s.contains("lastTapAt"))

        need("call path missing",
                s.contains("tryEnsureBirdness("))

        need("holdMs/cooldownMs missing",
                s.contains("holdMs") && s.contains("cooldownMs"))
    }
}

tasks.register("verifyC2") {
    dependsOn("testDebugUnitTest", "lint")
}

